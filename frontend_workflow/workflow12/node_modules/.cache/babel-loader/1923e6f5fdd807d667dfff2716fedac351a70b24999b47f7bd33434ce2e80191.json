{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/frontend workflow/workflow12/src/components/ViewTree.jsx\",\n  _s = $RefreshSig$();\n// src/components/ViewTree.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactFlow, { ReactFlowProvider, addEdge, Background, Controls, MiniMap } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport './ViewTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTree = ({\n  match\n}) => {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchWorkflowJsonData = async () => {\n      try {\n        const response = await axios.get(`/api/get-workflow-json/${match.params.workflowId}`);\n        generateElements(response.data.workflow, response.data.jsonData);\n      } catch (error) {\n        setError('Error fetching workflow and JSON data.');\n      }\n    };\n    fetchWorkflowJsonData();\n  }, [match.params.workflowId]);\n  const generateElements = (workflow, jsonData) => {\n    const newElements = [];\n    const generateElement = (node, parentId = null) => {\n      const nodeId = `${parentId ? `${parentId}-` : ''}${newElements.length}`;\n      const isSatisfied = jsonData[node.name] !== undefined; // Check if the JSON data satisfies the node\n      newElements.push({\n        id: nodeId,\n        data: {\n          label: node.name || 'Unnamed Node'\n        },\n        position: {\n          x: Math.random() * 250,\n          y: Math.random() * 250\n        },\n        style: {\n          backgroundColor: isSatisfied ? 'green' : 'grey'\n        } // Set color based on satisfaction\n      });\n      if (parentId) {\n        newElements.push({\n          id: `e${parentId}-${nodeId}`,\n          source: parentId,\n          target: nodeId\n        });\n      }\n      if (node.children) {\n        node.children.forEach(child => generateElement(child, nodeId));\n      }\n    };\n    generateElement(workflow);\n    setElements(newElements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-tree-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Workflow Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"react-flow-wrapper\",\n      style: {\n        height: '80vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          snapToGrid: true,\n          snapGrid: [15, 15],\n          onConnect: params => setElements(els => addEdge(params, els)),\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            color: \"#aaa\",\n            gap: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n            nodeColor: node => {\n              switch (node.type) {\n                case 'input':\n                  return 'blue';\n                case 'output':\n                  return 'green';\n                default:\n                  return '#00ff00';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTree, \"kUA/UTjWpDUOac6ddYsLt4qoM2o=\");\n_c = ViewTree;\nexport default ViewTree;\nvar _c;\n$RefreshReg$(_c, \"ViewTree\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactFlow","ReactFlowProvider","addEdge","Background","Controls","MiniMap","jsxDEV","_jsxDEV","ViewTree","match","_s","elements","setElements","error","setError","fetchWorkflowJsonData","response","get","params","workflowId","generateElements","data","workflow","jsonData","newElements","generateElement","node","parentId","nodeId","length","isSatisfied","name","undefined","push","id","label","position","x","Math","random","y","style","backgroundColor","source","target","children","forEach","child","className","fileName","_jsxFileName","lineNumber","columnNumber","height","width","snapToGrid","snapGrid","onConnect","els","color","gap","nodeColor","type","_c","$RefreshReg$"],"sources":["/home/aditya/Desktop/frontend workflow/workflow12/src/components/ViewTree.jsx"],"sourcesContent":["// src/components/ViewTree.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactFlow, { ReactFlowProvider, addEdge, Background, Controls, MiniMap } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport './ViewTree.css';\r\n\r\nconst ViewTree = ({ match }) => {\r\n  const [elements, setElements] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchWorkflowJsonData = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/get-workflow-json/${match.params.workflowId}`);\r\n        generateElements(response.data.workflow, response.data.jsonData);\r\n      } catch (error) {\r\n        setError('Error fetching workflow and JSON data.');\r\n      }\r\n    };\r\n    fetchWorkflowJsonData();\r\n  }, [match.params.workflowId]);\r\n\r\n  const generateElements = (workflow, jsonData) => {\r\n    const newElements = [];\r\n    const generateElement = (node, parentId = null) => {\r\n      const nodeId = `${parentId ? `${parentId}-` : ''}${newElements.length}`;\r\n      const isSatisfied = jsonData[node.name] !== undefined; // Check if the JSON data satisfies the node\r\n      newElements.push({\r\n        id: nodeId,\r\n        data: { label: node.name || 'Unnamed Node' },\r\n        position: { x: Math.random() * 250, y: Math.random() * 250 },\r\n        style: { backgroundColor: isSatisfied ? 'green' : 'grey' }, // Set color based on satisfaction\r\n      });\r\n      if (parentId) {\r\n        newElements.push({\r\n          id: `e${parentId}-${nodeId}`,\r\n          source: parentId,\r\n          target: nodeId,\r\n        });\r\n      }\r\n      if (node.children) {\r\n        node.children.forEach((child) => generateElement(child, nodeId));\r\n      }\r\n    };\r\n    generateElement(workflow);\r\n    setElements(newElements);\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-tree-container\">\r\n      <h1>Workflow Tree</h1>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <div className=\"react-flow-wrapper\" style={{ height: '80vh', width: '100%' }}>\r\n        <ReactFlowProvider>\r\n          <ReactFlow\r\n            elements={elements}\r\n            style={{ width: '100%', height: '100%' }}\r\n            snapToGrid={true}\r\n            snapGrid={[15, 15]}\r\n            onConnect={(params) => setElements((els) => addEdge(params, els))}\r\n          >\r\n            <Background color=\"#aaa\" gap={16} />\r\n            <Controls />\r\n            <MiniMap nodeColor={(node) => {\r\n              switch (node.type) {\r\n                case 'input':\r\n                  return 'blue';\r\n                case 'output':\r\n                  return 'green';\r\n                default:\r\n                  return '#00ff00';\r\n              }\r\n            }} />\r\n          </ReactFlow>\r\n        </ReactFlowProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}