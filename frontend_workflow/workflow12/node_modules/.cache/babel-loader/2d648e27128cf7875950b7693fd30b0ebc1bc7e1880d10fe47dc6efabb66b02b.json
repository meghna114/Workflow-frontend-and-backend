{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meghna.Kaushik\\\\Workflow-frontend-and-backend\\\\frontend_workflow\\\\workflow12\\\\src\\\\components\\\\ConditionRow.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionRow = ({\n  index,\n  onConditionChange\n}) => {\n  // Define dropdown options excluding \"Name\"\n  const dropdownOptions = [\"Age\", \"Gender\", \"Pincode\"];\n  const handleDropdownChange = event => {\n    const newCondition = {\n      ...condition,\n      firstDropdown: event.target.value\n    };\n    onConditionChange(index, newCondition);\n  };\n  const handleTextBoxChange = event => {\n    const newCondition = {\n      ...condition,\n      textBoxValue: event.target.value\n    };\n    onConditionChange(index, newCondition);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDropdownChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), dropdownOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter value\",\n      onChange: handleTextBoxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ConditionRow;\nexport default ConditionRow;\nvar _c;\n$RefreshReg$(_c, \"ConditionRow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConditionRow","index","onConditionChange","dropdownOptions","handleDropdownChange","event","newCondition","condition","firstDropdown","target","value","handleTextBoxChange","textBoxValue","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Meghna.Kaushik/Workflow-frontend-and-backend/frontend_workflow/workflow12/src/components/ConditionRow.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ConditionRow = ({ index, onConditionChange }) => {\r\n  // Define dropdown options excluding \"Name\"\r\n  const dropdownOptions = [\"Age\", \"Gender\", \"Pincode\"];\r\n  \r\n  const handleDropdownChange = (event) => {\r\n    const newCondition = { ...condition, firstDropdown: event.target.value };\r\n    onConditionChange(index, newCondition);\r\n  };\r\n\r\n  const handleTextBoxChange = (event) => {\r\n    const newCondition = { ...condition, textBoxValue: event.target.value };\r\n    onConditionChange(index, newCondition);\r\n  };\r\n\r\n  return (\r\n    <div className=\"condition-row\">\r\n      <select onChange={handleDropdownChange}>\r\n        <option value=\"\">Select an option</option>\r\n        {dropdownOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter value\"\r\n        onChange={handleTextBoxChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionRow;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAkB,CAAC,KAAK;EACrD;EACA,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;EAEpD,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,YAAY,GAAG;MAAE,GAAGC,SAAS;MAAEC,aAAa,EAAEH,KAAK,CAACI,MAAM,CAACC;IAAM,CAAC;IACxER,iBAAiB,CAACD,KAAK,EAAEK,YAAY,CAAC;EACxC,CAAC;EAED,MAAMK,mBAAmB,GAAIN,KAAK,IAAK;IACrC,MAAMC,YAAY,GAAG;MAAE,GAAGC,SAAS;MAAEK,YAAY,EAAEP,KAAK,CAACI,MAAM,CAACC;IAAM,CAAC;IACvER,iBAAiB,CAACD,KAAK,EAAEK,YAAY,CAAC;EACxC,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA;MAAQgB,QAAQ,EAAEX,oBAAqB;MAAAU,QAAA,gBACrCf,OAAA;QAAQW,KAAK,EAAC,EAAE;QAAAI,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzChB,eAAe,CAACiB,GAAG,CAAEC,MAAM,iBAC1BtB,OAAA;QAAqBW,KAAK,EAAEW,MAAO;QAAAP,QAAA,EAChCO;MAAM,GADIA,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTpB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBR,QAAQ,EAAEJ;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GA/BIxB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}