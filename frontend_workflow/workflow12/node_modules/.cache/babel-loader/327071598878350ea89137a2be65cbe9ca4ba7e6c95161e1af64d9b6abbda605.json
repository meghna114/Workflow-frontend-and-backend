{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\n// import axios from 'axios';\n\n// const ViewTree = () => {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         // const response = await axios.get('http://localhost:8080/api/graph-data');\n//         const response = {\n//           \"GenderCheck\": {\n//               \"PincodeCheck\": {\n//                   \"key\": 0,\n//                   \"value\": \"Male\"\n//               },\n//               \"LoanStatus\": {\n//                   \"key\": 2,\n//                   \"value\": \"Female\"\n//               }\n//           },\n//           \"PincodeCheck\": {\n//               \"LoanStatus\": {\n//                   \"key\": 3,\n//                   \"value\": \"Starts with 40\"\n//               }\n//           },\n//           \"DobCheck\": {\n//               \"GenderCheck\": {\n//                   \"key\": 0,\n//                   \"value\": \"age>25\"\n//               }\n//           }\n//       };\n//         processGraphData(response);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const processGraphData = (data) => {\n//     const newNodes = [];\n//     const newEdges = [];\n//     const positions = {};\n//     let yOffset = 0;\n\n//     // Function to calculate position\n//     const calculatePosition = (node) => {\n//       if (!positions[node]) {\n//         positions[node] = { x: 250, y: yOffset };\n//         yOffset += 100;\n//       }\n//       return positions[node];\n//     };\n\n//     Object.keys(data).forEach((source) => {\n//       if (!newNodes.find((node) => node.id === source)) {\n//         newNodes.push({ id: source, data: { label: source }, position: calculatePosition(source) });\n//       }\n//       Object.keys(data[source]).forEach((target) => {\n//         if (!newNodes.find((node) => node.id === target)) {\n//           newNodes.push({ id: target, data: { label: target }, position: calculatePosition(target) });\n//         }\n//         const { key, value } = data[source][target];\n//         newEdges.push({\n//           id: `e${source}-${target}`,\n//           source,\n//           target,\n//           label: value,\n//           style: { stroke: `hsl(${key * 36}, 100%, 50%)` }, // Coloring based on key\n//         });\n//       });\n//     });\n\n//     setNodes(newNodes);\n//     setEdges(newEdges);\n//   };\n\n//   return (\n//     <div style={{ height: 1000 }}>\n//       <ReactFlow nodes={nodes} edges={edges} fitView>\n//         <MiniMap />\n//         <Controls />\n//         <Background />\n//       </ReactFlow>\n//     </div>\n//   );\n// };\n\n// export default ViewTree;","map":{"version":3,"names":[],"sources":["/home/aditya/Desktop/frontend workflow/workflow12/src/components/ViewTree.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\r\n// import axios from 'axios';\r\n\r\n// const ViewTree = () => {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         // const response = await axios.get('http://localhost:8080/api/graph-data');\r\n//         const response = {\r\n//           \"GenderCheck\": {\r\n//               \"PincodeCheck\": {\r\n//                   \"key\": 0,\r\n//                   \"value\": \"Male\"\r\n//               },\r\n//               \"LoanStatus\": {\r\n//                   \"key\": 2,\r\n//                   \"value\": \"Female\"\r\n//               }\r\n//           },\r\n//           \"PincodeCheck\": {\r\n//               \"LoanStatus\": {\r\n//                   \"key\": 3,\r\n//                   \"value\": \"Starts with 40\"\r\n//               }\r\n//           },\r\n//           \"DobCheck\": {\r\n//               \"GenderCheck\": {\r\n//                   \"key\": 0,\r\n//                   \"value\": \"age>25\"\r\n//               }\r\n//           }\r\n//       };\r\n//         processGraphData(response);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const processGraphData = (data) => {\r\n//     const newNodes = [];\r\n//     const newEdges = [];\r\n//     const positions = {};\r\n//     let yOffset = 0;\r\n\r\n//     // Function to calculate position\r\n//     const calculatePosition = (node) => {\r\n//       if (!positions[node]) {\r\n//         positions[node] = { x: 250, y: yOffset };\r\n//         yOffset += 100;\r\n//       }\r\n//       return positions[node];\r\n//     };\r\n\r\n//     Object.keys(data).forEach((source) => {\r\n//       if (!newNodes.find((node) => node.id === source)) {\r\n//         newNodes.push({ id: source, data: { label: source }, position: calculatePosition(source) });\r\n//       }\r\n//       Object.keys(data[source]).forEach((target) => {\r\n//         if (!newNodes.find((node) => node.id === target)) {\r\n//           newNodes.push({ id: target, data: { label: target }, position: calculatePosition(target) });\r\n//         }\r\n//         const { key, value } = data[source][target];\r\n//         newEdges.push({\r\n//           id: `e${source}-${target}`,\r\n//           source,\r\n//           target,\r\n//           label: value,\r\n//           style: { stroke: `hsl(${key * 36}, 100%, 50%)` }, // Coloring based on key\r\n//         });\r\n//       });\r\n//     });\r\n\r\n//     setNodes(newNodes);\r\n//     setEdges(newEdges);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ height: 1000 }}>\r\n//       <ReactFlow nodes={nodes} edges={edges} fitView>\r\n//         <MiniMap />\r\n//         <Controls />\r\n//         <Background />\r\n//       </ReactFlow>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewTree;\r\n"],"mappings":";;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}