{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meghna.Kaushik\\\\Workflow-frontend-and-backend\\\\frontend_workflow\\\\workflow12\\\\src\\\\components\\\\ConditionRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionRow = ({\n  index,\n  onConditionChange\n}) => {\n  _s();\n  const [condition, setCondition] = useState({\n    firstDropdown: \"\",\n    textBoxValue: \"\"\n  });\n  const dropdownOptions = [\"Age\", \"Gender\", \"Pincode\"];\n  const handleDropdownChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newCondition = {\n      ...condition,\n      [name]: value\n    };\n    setCondition(newCondition);\n    onConditionChange(index, newCondition);\n  };\n  const handleTextBoxChange = event => {\n    const {\n      value\n    } = event.target;\n    const newCondition = {\n      ...condition,\n      textBoxValue: value\n    };\n    setCondition(newCondition);\n    onConditionChange(index, newCondition);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"firstDropdown\",\n      value: condition.firstDropdown,\n      onChange: handleDropdownChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), dropdownOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"textBoxValue\",\n      value: condition.textBoxValue,\n      onChange: handleTextBoxChange,\n      placeholder: \"Enter value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ConditionRow, \"+C4gL0q+TuVy3r+tnQcoxMT1hio=\");\n_c = ConditionRow;\nexport default ConditionRow;\nvar _c;\n$RefreshReg$(_c, \"ConditionRow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConditionRow","index","onConditionChange","_s","condition","setCondition","firstDropdown","textBoxValue","dropdownOptions","handleDropdownChange","event","name","value","target","newCondition","handleTextBoxChange","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Meghna.Kaushik/Workflow-frontend-and-backend/frontend_workflow/workflow12/src/components/ConditionRow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ConditionRow = ({ index, onConditionChange }) => {\r\n  const [condition, setCondition] = useState({\r\n    firstDropdown: \"\",\r\n    textBoxValue: \"\",\r\n  });\r\n\r\n  const dropdownOptions = [\r\n    \"Age\",\r\n    \"Gender\",\r\n    \"Pincode\"\r\n  ];\r\n\r\n  const handleDropdownChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const newCondition = { ...condition, [name]: value };\r\n    setCondition(newCondition);\r\n    onConditionChange(index, newCondition);\r\n  };\r\n\r\n  const handleTextBoxChange = (event) => {\r\n    const { value } = event.target;\r\n    const newCondition = { ...condition, textBoxValue: value };\r\n    setCondition(newCondition);\r\n    onConditionChange(index, newCondition);\r\n  };\r\n\r\n  return (\r\n    <div className=\"condition-row\">\r\n      <select\r\n        name=\"firstDropdown\"\r\n        value={condition.firstDropdown}\r\n        onChange={handleDropdownChange}\r\n      >\r\n        <option value=\"\">Select an option</option>\r\n        {dropdownOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        name=\"textBoxValue\"\r\n        value={condition.textBoxValue}\r\n        onChange={handleTextBoxChange}\r\n        placeholder=\"Enter value\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionRow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC;IACzCS,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAG,CACtB,KAAK,EACL,QAAQ,EACR,SAAS,CACV;EAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC,MAAMC,YAAY,GAAG;MAAE,GAAGV,SAAS;MAAE,CAACO,IAAI,GAAGC;IAAM,CAAC;IACpDP,YAAY,CAACS,YAAY,CAAC;IAC1BZ,iBAAiB,CAACD,KAAK,EAAEa,YAAY,CAAC;EACxC,CAAC;EAED,MAAMC,mBAAmB,GAAIL,KAAK,IAAK;IACrC,MAAM;MAAEE;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAC9B,MAAMC,YAAY,GAAG;MAAE,GAAGV,SAAS;MAAEG,YAAY,EAAEK;IAAM,CAAC;IAC1DP,YAAY,CAACS,YAAY,CAAC;IAC1BZ,iBAAiB,CAACD,KAAK,EAAEa,YAAY,CAAC;EACxC,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlB,OAAA;MACEY,IAAI,EAAC,eAAe;MACpBC,KAAK,EAAER,SAAS,CAACE,aAAc;MAC/BY,QAAQ,EAAET,oBAAqB;MAAAQ,QAAA,gBAE/BlB,OAAA;QAAQa,KAAK,EAAC,EAAE;QAAAK,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzCd,eAAe,CAACe,GAAG,CAAEC,MAAM,iBAC1BzB,OAAA;QAAqBa,KAAK,EAAEY,MAAO;QAAAP,QAAA,EAChCO;MAAM,GADIA,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTvB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXd,IAAI,EAAC,cAAc;MACnBC,KAAK,EAAER,SAAS,CAACG,YAAa;MAC9BW,QAAQ,EAAEH,mBAAoB;MAC9BW,WAAW,EAAC;IAAa;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjDIH,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAmDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}