{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/frontend workflow/workflow12/src/components/ViewTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTree = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get('http://localhost:8080/api/graph-data');\n        const response = {\n          \"GenderCheck\": {\n            \"PincodeCheck\": {\n              \"key\": 0,\n              \"value\": \"Male\"\n            },\n            \"LoanStatus\": {\n              \"key\": 2,\n              \"value\": \"Female\"\n            }\n          },\n          \"PincodeCheck\": {\n            \"LoanStatus\": {\n              \"key\": 3,\n              \"value\": \"Starts with 40\"\n            }\n          },\n          \"DobCheck\": {\n            \"GenderCheck\": {\n              \"key\": 0,\n              \"value\": \"age>25\"\n            }\n          }\n        };\n        processGraphData(response);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const processGraphData = data => {\n    const newNodes = [];\n    const newEdges = [];\n    const positions = {};\n    let yOffset = 0;\n\n    // Function to calculate position\n    const calculatePosition = node => {\n      if (!positions[node]) {\n        positions[node] = {\n          x: 250,\n          y: yOffset\n        };\n        yOffset += 100;\n      }\n      return positions[node];\n    };\n    Object.keys(data).forEach(source => {\n      if (!newNodes.find(node => node.id === source)) {\n        newNodes.push({\n          id: source,\n          data: {\n            label: source\n          },\n          position: calculatePosition(source)\n        });\n      }\n      Object.keys(data[source]).forEach(target => {\n        if (!newNodes.find(node => node.id === target)) {\n          newNodes.push({\n            id: target,\n            data: {\n              label: target\n            },\n            position: calculatePosition(target)\n          });\n        }\n        const {\n          key,\n          value\n        } = data[source][target];\n        newEdges.push({\n          id: `e${source}-${target}`,\n          source,\n          target,\n          label: value,\n          style: {\n            stroke: `hsl(${key * 36}, 100%, 50%)`\n          } // Coloring based on key\n        });\n      });\n    });\n    setNodes(newNodes);\n    setEdges(newEdges);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTree, \"qOdGaiImnCja3mNU5uxxCrNYw9I=\");\n_c = ViewTree;\nexport default ViewTree;\nvar _c;\n$RefreshReg$(_c, \"ViewTree\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","MiniMap","Controls","Background","axios","jsxDEV","_jsxDEV","ViewTree","_s","nodes","setNodes","edges","setEdges","fetchData","response","processGraphData","error","console","data","newNodes","newEdges","positions","yOffset","calculatePosition","node","x","y","Object","keys","forEach","source","find","id","push","label","position","target","key","value","style","stroke","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aditya/Desktop/frontend workflow/workflow12/src/components/ViewTree.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\r\nimport axios from 'axios';\r\n\r\nconst ViewTree = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // const response = await axios.get('http://localhost:8080/api/graph-data');\r\n        const response = {\r\n          \"GenderCheck\": {\r\n              \"PincodeCheck\": {\r\n                  \"key\": 0,\r\n                  \"value\": \"Male\"\r\n              },\r\n              \"LoanStatus\": {\r\n                  \"key\": 2,\r\n                  \"value\": \"Female\"\r\n              }\r\n          },\r\n          \"PincodeCheck\": {\r\n              \"LoanStatus\": {\r\n                  \"key\": 3,\r\n                  \"value\": \"Starts with 40\"\r\n              }\r\n          },\r\n          \"DobCheck\": {\r\n              \"GenderCheck\": {\r\n                  \"key\": 0,\r\n                  \"value\": \"age>25\"\r\n              }\r\n          }\r\n      };\r\n        processGraphData(response);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const processGraphData = (data) => {\r\n    const newNodes = [];\r\n    const newEdges = [];\r\n    const positions = {};\r\n    let yOffset = 0;\r\n\r\n    // Function to calculate position\r\n    const calculatePosition = (node) => {\r\n      if (!positions[node]) {\r\n        positions[node] = { x: 250, y: yOffset };\r\n        yOffset += 100;\r\n      }\r\n      return positions[node];\r\n    };\r\n\r\n    Object.keys(data).forEach((source) => {\r\n      if (!newNodes.find((node) => node.id === source)) {\r\n        newNodes.push({ id: source, data: { label: source }, position: calculatePosition(source) });\r\n      }\r\n      Object.keys(data[source]).forEach((target) => {\r\n        if (!newNodes.find((node) => node.id === target)) {\r\n          newNodes.push({ id: target, data: { label: target }, position: calculatePosition(target) });\r\n        }\r\n        const { key, value } = data[source][target];\r\n        newEdges.push({\r\n          id: `e${source}-${target}`,\r\n          source,\r\n          target,\r\n          label: value,\r\n          style: { stroke: `hsl(${key * 36}, 100%, 50%)` }, // Coloring based on key\r\n        });\r\n      });\r\n    });\r\n\r\n    setNodes(newNodes);\r\n    setEdges(newEdges);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 1000 }}>\r\n      <ReactFlow nodes={nodes} edges={edges} fitView>\r\n        <MiniMap />\r\n        <Controls />\r\n        <Background />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}